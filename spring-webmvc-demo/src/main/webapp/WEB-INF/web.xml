<?xml version="1.0" encoding="UTF-8"?><!--web.xml的模式文件是由Sun公司定义的，每个web.xml文件的根元素<web-app>中，都必须标明这个 web.xml使用的是哪个模式文件。其它的元素都放在<web-app></web-app>之中。-->
<web-app
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">

  <!--WEB容器的加载顺序是：ServletContext -> context-param -> listener -> filter -> servlet-->

  <!--Web应用名称-->
  <display-name>spring-webmvc-demo</display-name>
  <!--Web应用描述-->
  <description>spring-webmvc-demo.</description>

  <!--上下文参数
      声明应用范围内的初始化参数。它用于向 ServletContext提供键值对，即应用程序上下文信息。我们的listener, filter等在初始化时会用到这些上下文中的信息。
      在servlet里面可以通过getServletContext().getInitParameter("context/param")得到。
  -->
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>spring-web</param-value>
  </context-param>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:applicationContext.xml
      classpath:datasource.xml
    </param-value>
  </context-param>

  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <filter>
    <filter-name>EncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>EncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <servlet>
    <servlet-name>appServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/web-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>appServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>/WEB-INF/views/home.jsp</welcome-file>
  </welcome-file-list>


  <!--error 处理页面-->
  <!--<error-page>-->
    <!--<error-code>404</error-code>-->
    <!--<location>/error/error_404.jsp</location>-->
  <!--</error-page>-->
  <!--<error-page>-->
    <!--<error-code>500</error-code>-->
    <!--<location>/error/error-500.jsp</location>-->
  <!--</error-page>-->
  <!--<error-page>-->
    <!--<error-code>503</error-code>-->
    <!--<location>/error/error-503.jsp</location>-->
  <!--</error-page>-->

  <!--&lt;!&ndash;这里这样用主要是我的web.xml是用的2.4以上的版本，如果是2.3的版本的话，不需要<jsp-config>标签，直接用taglib就可以了&ndash;&gt;-->
  <!--<jsp-config>-->
  <!--<taglib>-->
  <!--<taglib-uri>c-jstl</taglib-uri>-->
  <!--<taglib-location>taglibs/c.tld</taglib-location>-->
  <!--</taglib>-->
  <!--<taglib>-->
  <!--<taglib-uri>fn-jstl</taglib-uri>-->
  <!--<taglib-location>taglibs/fn.tld</taglib-location>-->
  <!--</taglib>-->
  <!--<taglib>-->
  <!--<taglib-uri>fmt-jstl</taglib-uri>-->
  <!--<taglib-location>taglibs/fmt.tld</taglib-location>-->
  <!--</taglib>-->
  <!--</jsp-config>-->

</web-app>