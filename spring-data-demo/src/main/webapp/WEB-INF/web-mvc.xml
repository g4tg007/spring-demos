<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- spring mvc 启动自动扫描该包下所有的Bean(例如@Controller)
    <mvc:annotation-driven />
    declares explicit support for annotation-driven MVC controllers
    (i.e. @RequestMapping, @Controller, although support for those is the default behaviour),
    as well as adding support for declrative validation via
    @Valid and message body marshalling with @RequestBody/ResponseBody
    -->
    <!-- 对静态资源文件的访问  方案一 （二选一） -->
    <!--<mvc:default-servlet-handler />-->
    <!-- 对静态资源文件的访问  方案二 （二选一）-->
    <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/error/**" location="/error/"/>
    <mvc:resources mapping="/front-libs/**" location="/front-libs/"/>

    <!-- 定义视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 配置Fastjson支持 -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <!--<value>text/html;charset=UTF-8</value>-->
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!--jackson json -->
    <!--<bean id="mappingJackson2HttpMessageConverter"-->
    <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>application/json;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.xiao.demo.webmvc.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- spring upload -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000000"/>
        <property name="defaultEncoding" value="utf-8"/>
    </bean>

</beans>
